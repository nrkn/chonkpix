import { clampTransfer } from './util.js';
// composite normal/over 
// todo - other blend modes (see our rgba-image library for implementation)
export const composite = (src, dest, transfer = [
    0, 0, src.width, src.height, 0, 0
], scaleAlpha = 1) => {
    const [sx, sy, sw, sh, dx, dy] = clampTransfer(src.width, src.height, dest.width, dest.height, transfer);
    for (let j = 0; j < sh; j++) {
        const srcY = j + sy;
        const destY = j + dy;
        const srcRow = srcY * src.width;
        const destRow = destY * dest.width;
        for (let i = 0; i < sw; i++) {
            const srcX = i + sx;
            const destX = i + dx;
            const srcIndex = (srcRow + srcX) * 4;
            const destIndex = (destRow + destX) * 4;
            const srcR = src.data[srcIndex];
            const srcG = src.data[srcIndex + 1];
            const srcB = src.data[srcIndex + 2];
            const srcA = src.data[srcIndex + 3];
            const destR = dest.data[destIndex];
            const destG = dest.data[destIndex + 1];
            const destB = dest.data[destIndex + 2];
            const destA = dest.data[destIndex + 3];
            const alpha = srcA / 255 * scaleAlpha;
            dest.data[destIndex] = srcR * alpha + destR * (1 - alpha);
            dest.data[destIndex + 1] = srcG * alpha + destG * (1 - alpha);
            dest.data[destIndex + 2] = srcB * alpha + destB * (1 - alpha);
            dest.data[destIndex + 3] = srcA + destA * (1 - alpha);
        }
    }
    return dest;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9zaXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9pbWFnZS9jb21wb3NpdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLFdBQVcsQ0FBQTtBQUV6Qyx5QkFBeUI7QUFDekIsMkVBQTJFO0FBQzNFLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxDQUN2QixHQUFjLEVBQUUsSUFBZSxFQUMvQixXQUFlO0lBQ2IsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7Q0FDbEMsRUFDRCxVQUFVLEdBQUcsQ0FBQyxFQUNkLEVBQUU7SUFDRixNQUFNLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxhQUFhLENBQzVDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUN6RCxDQUFBO0lBRUQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1FBQzVCLE1BQU0sSUFBSSxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUE7UUFDbkIsTUFBTSxLQUFLLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQTtRQUVwQixNQUFNLE1BQU0sR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQTtRQUMvQixNQUFNLE9BQU8sR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQTtRQUVsQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7WUFDNUIsTUFBTSxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQTtZQUNuQixNQUFNLEtBQUssR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFBO1lBRXBCLE1BQU0sUUFBUSxHQUFHLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtZQUNwQyxNQUFNLFNBQVMsR0FBRyxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUE7WUFFdkMsTUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQTtZQUMvQixNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQTtZQUNuQyxNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQTtZQUNuQyxNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQTtZQUVuQyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1lBQ2xDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFBO1lBQ3RDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFBO1lBQ3RDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFBO1lBRXRDLE1BQU0sS0FBSyxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsVUFBVSxDQUFBO1lBRXJDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsSUFBSSxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUE7WUFDekQsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUE7WUFDN0QsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUE7WUFDN0QsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFHLEtBQUssR0FBRyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQTtRQUN2RCxDQUFDO0lBQ0gsQ0FBQztJQUVELE9BQU8sSUFBSSxDQUFBO0FBQ2IsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVDYgfSBmcm9tICcuLi90eXBlcy5qcydcbmltcG9ydCB7IGNsYW1wVHJhbnNmZXIgfSBmcm9tICcuL3V0aWwuanMnXG5cbi8vIGNvbXBvc2l0ZSBub3JtYWwvb3ZlciBcbi8vIHRvZG8gLSBvdGhlciBibGVuZCBtb2RlcyAoc2VlIG91ciByZ2JhLWltYWdlIGxpYnJhcnkgZm9yIGltcGxlbWVudGF0aW9uKVxuZXhwb3J0IGNvbnN0IGNvbXBvc2l0ZSA9IChcbiAgc3JjOiBJbWFnZURhdGEsIGRlc3Q6IEltYWdlRGF0YSxcbiAgdHJhbnNmZXI6IFQ2ID0gW1xuICAgIDAsIDAsIHNyYy53aWR0aCwgc3JjLmhlaWdodCwgMCwgMFxuICBdLFxuICBzY2FsZUFscGhhID0gMVxuKSA9PiB7XG4gIGNvbnN0IFtzeCwgc3ksIHN3LCBzaCwgZHgsIGR5XSA9IGNsYW1wVHJhbnNmZXIoXG4gICAgc3JjLndpZHRoLCBzcmMuaGVpZ2h0LCBkZXN0LndpZHRoLCBkZXN0LmhlaWdodCwgdHJhbnNmZXJcbiAgKVxuXG4gIGZvciAobGV0IGogPSAwOyBqIDwgc2g7IGorKykge1xuICAgIGNvbnN0IHNyY1kgPSBqICsgc3lcbiAgICBjb25zdCBkZXN0WSA9IGogKyBkeVxuXG4gICAgY29uc3Qgc3JjUm93ID0gc3JjWSAqIHNyYy53aWR0aFxuICAgIGNvbnN0IGRlc3RSb3cgPSBkZXN0WSAqIGRlc3Qud2lkdGhcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3c7IGkrKykge1xuICAgICAgY29uc3Qgc3JjWCA9IGkgKyBzeFxuICAgICAgY29uc3QgZGVzdFggPSBpICsgZHhcblxuICAgICAgY29uc3Qgc3JjSW5kZXggPSAoc3JjUm93ICsgc3JjWCkgKiA0XG4gICAgICBjb25zdCBkZXN0SW5kZXggPSAoZGVzdFJvdyArIGRlc3RYKSAqIDRcblxuICAgICAgY29uc3Qgc3JjUiA9IHNyYy5kYXRhW3NyY0luZGV4XVxuICAgICAgY29uc3Qgc3JjRyA9IHNyYy5kYXRhW3NyY0luZGV4ICsgMV1cbiAgICAgIGNvbnN0IHNyY0IgPSBzcmMuZGF0YVtzcmNJbmRleCArIDJdXG4gICAgICBjb25zdCBzcmNBID0gc3JjLmRhdGFbc3JjSW5kZXggKyAzXVxuXG4gICAgICBjb25zdCBkZXN0UiA9IGRlc3QuZGF0YVtkZXN0SW5kZXhdXG4gICAgICBjb25zdCBkZXN0RyA9IGRlc3QuZGF0YVtkZXN0SW5kZXggKyAxXVxuICAgICAgY29uc3QgZGVzdEIgPSBkZXN0LmRhdGFbZGVzdEluZGV4ICsgMl1cbiAgICAgIGNvbnN0IGRlc3RBID0gZGVzdC5kYXRhW2Rlc3RJbmRleCArIDNdXG5cbiAgICAgIGNvbnN0IGFscGhhID0gc3JjQSAvIDI1NSAqIHNjYWxlQWxwaGFcblxuICAgICAgZGVzdC5kYXRhW2Rlc3RJbmRleF0gPSBzcmNSICogYWxwaGEgKyBkZXN0UiAqICgxIC0gYWxwaGEpXG4gICAgICBkZXN0LmRhdGFbZGVzdEluZGV4ICsgMV0gPSBzcmNHICogYWxwaGEgKyBkZXN0RyAqICgxIC0gYWxwaGEpXG4gICAgICBkZXN0LmRhdGFbZGVzdEluZGV4ICsgMl0gPSBzcmNCICogYWxwaGEgKyBkZXN0QiAqICgxIC0gYWxwaGEpXG4gICAgICBkZXN0LmRhdGFbZGVzdEluZGV4ICsgM10gPSBzcmNBICsgZGVzdEEgKiAoMSAtIGFscGhhKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBkZXN0XG59XG4iXX0=