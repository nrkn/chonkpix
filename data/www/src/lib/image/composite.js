import { clampTransfer } from './util.js';
// composite normal/over 
// todo - other blend modes (see our rgba-image library for implementation)
export const composite = (src, dest, transfer = [
    0, 0, src.width, src.height, 0, 0
], scaleAlpha = 1) => {
    const [sx, sy, sw, sh, dx, dy] = clampTransfer(src.width, src.height, dest.width, dest.height, transfer);
    for (let j = 0; j < sh; j++) {
        const srcY = j + sy;
        const destY = j + dy;
        const srcRow = srcY * src.width;
        const destRow = destY * dest.width;
        for (let i = 0; i < sw; i++) {
            const srcX = i + sx;
            const destX = i + dx;
            const srcIndex = (srcRow + srcX) * 4;
            const destIndex = (destRow + destX) * 4;
            const srcR = src.data[srcIndex];
            const srcG = src.data[srcIndex + 1];
            const srcB = src.data[srcIndex + 2];
            const srcA = src.data[srcIndex + 3];
            const destR = dest.data[destIndex];
            const destG = dest.data[destIndex + 1];
            const destB = dest.data[destIndex + 2];
            const destA = dest.data[destIndex + 3];
            const alpha = srcA / 255 * scaleAlpha;
            dest.data[destIndex] = srcR * alpha + destR * (1 - alpha);
            dest.data[destIndex + 1] = srcG * alpha + destG * (1 - alpha);
            dest.data[destIndex + 2] = srcB * alpha + destB * (1 - alpha);
            dest.data[destIndex + 3] = srcA + destA * (1 - alpha);
        }
    }
    return dest;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9zaXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9pbWFnZS9jb21wb3NpdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLFdBQVcsQ0FBQTtBQUV6Qyx5QkFBeUI7QUFDekIsMkVBQTJFO0FBQzNFLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxDQUN2QixHQUFjLEVBQUUsSUFBZSxFQUMvQixXQUFlO0lBQ2IsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7Q0FDbEMsRUFDRCxVQUFVLEdBQUcsQ0FBQyxFQUNkLEVBQUU7SUFDRixNQUFNLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxhQUFhLENBQzVDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUN6RCxDQUFBO0lBRUQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1FBQzVCLE1BQU0sSUFBSSxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUE7UUFDbkIsTUFBTSxLQUFLLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQTtRQUVwQixNQUFNLE1BQU0sR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQTtRQUMvQixNQUFNLE9BQU8sR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQTtRQUVsQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7WUFDNUIsTUFBTSxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQTtZQUNuQixNQUFNLEtBQUssR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFBO1lBRXBCLE1BQU0sUUFBUSxHQUFHLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtZQUNwQyxNQUFNLFNBQVMsR0FBRyxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUE7WUFFdkMsTUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQTtZQUMvQixNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQTtZQUNuQyxNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQTtZQUNuQyxNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQTtZQUVuQyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1lBQ2xDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFBO1lBQ3RDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFBO1lBQ3RDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFBO1lBRXRDLE1BQU0sS0FBSyxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsVUFBVSxDQUFBO1lBRXJDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsSUFBSSxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUE7WUFDekQsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUE7WUFDN0QsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUE7WUFDN0QsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFHLEtBQUssR0FBRyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQTtRQUN2RCxDQUFDO0lBQ0gsQ0FBQztJQUVELE9BQU8sSUFBSSxDQUFBO0FBQ2IsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVDYgfSBmcm9tICcuLi90eXBlcy5qcydcclxuaW1wb3J0IHsgY2xhbXBUcmFuc2ZlciB9IGZyb20gJy4vdXRpbC5qcydcclxuXHJcbi8vIGNvbXBvc2l0ZSBub3JtYWwvb3ZlciBcclxuLy8gdG9kbyAtIG90aGVyIGJsZW5kIG1vZGVzIChzZWUgb3VyIHJnYmEtaW1hZ2UgbGlicmFyeSBmb3IgaW1wbGVtZW50YXRpb24pXHJcbmV4cG9ydCBjb25zdCBjb21wb3NpdGUgPSAoXHJcbiAgc3JjOiBJbWFnZURhdGEsIGRlc3Q6IEltYWdlRGF0YSxcclxuICB0cmFuc2ZlcjogVDYgPSBbXHJcbiAgICAwLCAwLCBzcmMud2lkdGgsIHNyYy5oZWlnaHQsIDAsIDBcclxuICBdLFxyXG4gIHNjYWxlQWxwaGEgPSAxXHJcbikgPT4ge1xyXG4gIGNvbnN0IFtzeCwgc3ksIHN3LCBzaCwgZHgsIGR5XSA9IGNsYW1wVHJhbnNmZXIoXHJcbiAgICBzcmMud2lkdGgsIHNyYy5oZWlnaHQsIGRlc3Qud2lkdGgsIGRlc3QuaGVpZ2h0LCB0cmFuc2ZlclxyXG4gIClcclxuXHJcbiAgZm9yIChsZXQgaiA9IDA7IGogPCBzaDsgaisrKSB7XHJcbiAgICBjb25zdCBzcmNZID0gaiArIHN5XHJcbiAgICBjb25zdCBkZXN0WSA9IGogKyBkeVxyXG5cclxuICAgIGNvbnN0IHNyY1JvdyA9IHNyY1kgKiBzcmMud2lkdGhcclxuICAgIGNvbnN0IGRlc3RSb3cgPSBkZXN0WSAqIGRlc3Qud2lkdGhcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN3OyBpKyspIHtcclxuICAgICAgY29uc3Qgc3JjWCA9IGkgKyBzeFxyXG4gICAgICBjb25zdCBkZXN0WCA9IGkgKyBkeFxyXG5cclxuICAgICAgY29uc3Qgc3JjSW5kZXggPSAoc3JjUm93ICsgc3JjWCkgKiA0XHJcbiAgICAgIGNvbnN0IGRlc3RJbmRleCA9IChkZXN0Um93ICsgZGVzdFgpICogNFxyXG5cclxuICAgICAgY29uc3Qgc3JjUiA9IHNyYy5kYXRhW3NyY0luZGV4XVxyXG4gICAgICBjb25zdCBzcmNHID0gc3JjLmRhdGFbc3JjSW5kZXggKyAxXVxyXG4gICAgICBjb25zdCBzcmNCID0gc3JjLmRhdGFbc3JjSW5kZXggKyAyXVxyXG4gICAgICBjb25zdCBzcmNBID0gc3JjLmRhdGFbc3JjSW5kZXggKyAzXVxyXG5cclxuICAgICAgY29uc3QgZGVzdFIgPSBkZXN0LmRhdGFbZGVzdEluZGV4XVxyXG4gICAgICBjb25zdCBkZXN0RyA9IGRlc3QuZGF0YVtkZXN0SW5kZXggKyAxXVxyXG4gICAgICBjb25zdCBkZXN0QiA9IGRlc3QuZGF0YVtkZXN0SW5kZXggKyAyXVxyXG4gICAgICBjb25zdCBkZXN0QSA9IGRlc3QuZGF0YVtkZXN0SW5kZXggKyAzXVxyXG5cclxuICAgICAgY29uc3QgYWxwaGEgPSBzcmNBIC8gMjU1ICogc2NhbGVBbHBoYVxyXG5cclxuICAgICAgZGVzdC5kYXRhW2Rlc3RJbmRleF0gPSBzcmNSICogYWxwaGEgKyBkZXN0UiAqICgxIC0gYWxwaGEpXHJcbiAgICAgIGRlc3QuZGF0YVtkZXN0SW5kZXggKyAxXSA9IHNyY0cgKiBhbHBoYSArIGRlc3RHICogKDEgLSBhbHBoYSlcclxuICAgICAgZGVzdC5kYXRhW2Rlc3RJbmRleCArIDJdID0gc3JjQiAqIGFscGhhICsgZGVzdEIgKiAoMSAtIGFscGhhKVxyXG4gICAgICBkZXN0LmRhdGFbZGVzdEluZGV4ICsgM10gPSBzcmNBICsgZGVzdEEgKiAoMSAtIGFscGhhKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGRlc3RcclxufVxyXG4iXX0=