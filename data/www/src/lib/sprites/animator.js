import { assrtPositive } from '../util.js';
export const animator = (frames) => {
    if (frames.length === 0)
        return () => null;
    const totalDuration = frames.reduce((acc, [duration]) => acc + assrtPositive(duration, 'Expected positive duration'), 0);
    if (totalDuration === 0)
        return () => null;
    const frameIdAt = (now) => {
        now = assrtPositive(now, 'Expected positive time') % totalDuration;
        for (let i = 0; i < frames.length; i++) {
            const [duration, id] = frames[i];
            if (now <= duration) {
                return id;
            }
            now -= duration;
        }
        return null;
    };
    return frameIdAt;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL3Nwcml0ZXMvYW5pbWF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLFlBQVksQ0FBQTtBQUcxQyxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBYSxNQUEyQixFQUFFLEVBQUU7SUFDbEUsSUFBSSxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUM7UUFBRSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQTtJQUUxQyxNQUFNLGFBQWEsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUNqQyxDQUFDLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEVBQUUsQ0FDbEIsR0FBRyxHQUFHLGFBQWEsQ0FBQyxRQUFRLEVBQUUsNEJBQTRCLENBQUMsRUFDN0QsQ0FBQyxDQUNGLENBQUE7SUFFRCxJQUFJLGFBQWEsS0FBSyxDQUFDO1FBQUUsT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUE7SUFFMUMsTUFBTSxTQUFTLEdBQUcsQ0FBQyxHQUFXLEVBQVksRUFBRTtRQUMxQyxHQUFHLEdBQUcsYUFBYSxDQUFDLEdBQUcsRUFBRSx3QkFBd0IsQ0FBQyxHQUFHLGFBQWEsQ0FBQTtRQUVsRSxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBQ3ZDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFBO1lBRWhDLElBQUksR0FBRyxJQUFJLFFBQVEsRUFBRSxDQUFDO2dCQUNwQixPQUFPLEVBQUUsQ0FBQTtZQUNYLENBQUM7WUFFRCxHQUFHLElBQUksUUFBUSxDQUFBO1FBQ2pCLENBQUM7UUFFRCxPQUFPLElBQUksQ0FBQTtJQUNiLENBQUMsQ0FBQTtJQUVELE9BQU8sU0FBUyxDQUFBO0FBQ2xCLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1heWJlIH0gZnJvbSAnLi4vdHlwZXMuanMnXHJcbmltcG9ydCB7IGFzc3J0UG9zaXRpdmUgfSBmcm9tICcuLi91dGlsLmpzJ1xyXG5pbXBvcnQgeyBBbmltYXRpb25GcmFtZSB9IGZyb20gJy4vdHlwZXMuanMnXHJcblxyXG5leHBvcnQgY29uc3QgYW5pbWF0b3IgPSA8VCA9IG51bWJlcj4oZnJhbWVzOiBBbmltYXRpb25GcmFtZTxUPltdKSA9PiB7XHJcbiAgaWYgKGZyYW1lcy5sZW5ndGggPT09IDApIHJldHVybiAoKSA9PiBudWxsXHJcblxyXG4gIGNvbnN0IHRvdGFsRHVyYXRpb24gPSBmcmFtZXMucmVkdWNlKFxyXG4gICAgKGFjYywgW2R1cmF0aW9uXSkgPT5cclxuICAgICAgYWNjICsgYXNzcnRQb3NpdGl2ZShkdXJhdGlvbiwgJ0V4cGVjdGVkIHBvc2l0aXZlIGR1cmF0aW9uJyksXHJcbiAgICAwXHJcbiAgKVxyXG5cclxuICBpZiAodG90YWxEdXJhdGlvbiA9PT0gMCkgcmV0dXJuICgpID0+IG51bGxcclxuXHJcbiAgY29uc3QgZnJhbWVJZEF0ID0gKG5vdzogbnVtYmVyKTogTWF5YmU8VD4gPT4ge1xyXG4gICAgbm93ID0gYXNzcnRQb3NpdGl2ZShub3csICdFeHBlY3RlZCBwb3NpdGl2ZSB0aW1lJykgJSB0b3RhbER1cmF0aW9uXHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmcmFtZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgY29uc3QgW2R1cmF0aW9uLCBpZF0gPSBmcmFtZXNbaV1cclxuXHJcbiAgICAgIGlmIChub3cgPD0gZHVyYXRpb24pIHtcclxuICAgICAgICByZXR1cm4gaWRcclxuICAgICAgfVxyXG5cclxuICAgICAgbm93IC09IGR1cmF0aW9uXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG51bGxcclxuICB9XHJcblxyXG4gIHJldHVybiBmcmFtZUlkQXRcclxufVxyXG4iXX0=