import { maybe } from '../util.js';
export const textTable = (cells) => {
    const colWidths = new Map();
    // measure
    for (let row = 0; row < cells.length; row++) {
        for (let col = 0; col < cells[row].length; col++) {
            const cell = cells[row][col];
            const width = cell.length;
            let existingW = colWidths.get(col);
            if (!maybe(existingW)) {
                existingW = 0;
            }
            if (width > existingW) {
                colWidths.set(col, width);
            }
        }
    }
    // format
    const formatted = [];
    for (let row = 0; row < cells.length; row++) {
        let line = '';
        for (let col = 0; col < cells[row].length; col++) {
            const cell = cells[row][col];
            const width = colWidths.get(col) || 0;
            const isLast = col === cells[row].length - 1;
            if (isLast) {
                line += cell.padStart(width);
            }
            else {
                line += cell.padEnd(width + 1);
            }
        }
        formatted.push(line);
    }
    return formatted;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtbGF5b3V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi90ZXh0L3RhYmxlLWxheW91dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sWUFBWSxDQUFBO0FBRWxDLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxDQUFDLEtBQWlCLEVBQVksRUFBRTtJQUN2RCxNQUFNLFNBQVMsR0FBRyxJQUFJLEdBQUcsRUFBa0IsQ0FBQTtJQUUzQyxVQUFVO0lBQ1YsS0FBSyxJQUFJLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQztRQUM1QyxLQUFLLElBQUksR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDO1lBQ2pELE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQTtZQUM1QixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFBO1lBRXpCLElBQUksU0FBUyxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUE7WUFFbEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDO2dCQUN0QixTQUFTLEdBQUcsQ0FBQyxDQUFBO1lBQ2YsQ0FBQztZQUVELElBQUksS0FBSyxHQUFHLFNBQVMsRUFBRSxDQUFDO2dCQUN0QixTQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQTtZQUMzQixDQUFDO1FBQ0gsQ0FBQztJQUNILENBQUM7SUFFRCxTQUFTO0lBQ1QsTUFBTSxTQUFTLEdBQWEsRUFBRSxDQUFBO0lBRTlCLEtBQUssSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUM7UUFDNUMsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFBO1FBRWIsS0FBSyxJQUFJLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQztZQUNqRCxNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUE7WUFDNUIsTUFBTSxLQUFLLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUE7WUFFckMsTUFBTSxNQUFNLEdBQUcsR0FBRyxLQUFLLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFBO1lBRTVDLElBQUksTUFBTSxFQUFFLENBQUM7Z0JBQ1gsSUFBSSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUE7WUFDOUIsQ0FBQztpQkFBTSxDQUFDO2dCQUNOLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQTtZQUNoQyxDQUFDO1FBQ0gsQ0FBQztRQUVELFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDdEIsQ0FBQztJQUVELE9BQU8sU0FBUyxDQUFBO0FBQ2xCLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1heWJlIH0gZnJvbSAnLi4vdXRpbC5qcydcblxuZXhwb3J0IGNvbnN0IHRleHRUYWJsZSA9IChjZWxsczogc3RyaW5nW11bXSk6IHN0cmluZ1tdID0+IHtcbiAgY29uc3QgY29sV2lkdGhzID0gbmV3IE1hcDxudW1iZXIsIG51bWJlcj4oKVxuXG4gIC8vIG1lYXN1cmVcbiAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgY2VsbHMubGVuZ3RoOyByb3crKykge1xuICAgIGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IGNlbGxzW3Jvd10ubGVuZ3RoOyBjb2wrKykge1xuICAgICAgY29uc3QgY2VsbCA9IGNlbGxzW3Jvd11bY29sXVxuICAgICAgY29uc3Qgd2lkdGggPSBjZWxsLmxlbmd0aFxuXG4gICAgICBsZXQgZXhpc3RpbmdXID0gY29sV2lkdGhzLmdldChjb2wpXG5cbiAgICAgIGlmICghbWF5YmUoZXhpc3RpbmdXKSkge1xuICAgICAgICBleGlzdGluZ1cgPSAwXG4gICAgICB9XG5cbiAgICAgIGlmICh3aWR0aCA+IGV4aXN0aW5nVykge1xuICAgICAgICBjb2xXaWR0aHMuc2V0KGNvbCwgd2lkdGgpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gZm9ybWF0XG4gIGNvbnN0IGZvcm1hdHRlZDogc3RyaW5nW10gPSBbXVxuXG4gIGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IGNlbGxzLmxlbmd0aDsgcm93KyspIHtcbiAgICBsZXQgbGluZSA9ICcnXG5cbiAgICBmb3IgKGxldCBjb2wgPSAwOyBjb2wgPCBjZWxsc1tyb3ddLmxlbmd0aDsgY29sKyspIHtcbiAgICAgIGNvbnN0IGNlbGwgPSBjZWxsc1tyb3ddW2NvbF1cbiAgICAgIGNvbnN0IHdpZHRoID0gY29sV2lkdGhzLmdldChjb2wpIHx8IDBcblxuICAgICAgY29uc3QgaXNMYXN0ID0gY29sID09PSBjZWxsc1tyb3ddLmxlbmd0aCAtIDFcblxuICAgICAgaWYgKGlzTGFzdCkge1xuICAgICAgICBsaW5lICs9IGNlbGwucGFkU3RhcnQod2lkdGgpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsaW5lICs9IGNlbGwucGFkRW5kKHdpZHRoICsgMSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3JtYXR0ZWQucHVzaChsaW5lKVxuICB9XG5cbiAgcmV0dXJuIGZvcm1hdHRlZFxufSJdfQ==