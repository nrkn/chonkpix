import { bresenhamLine } from '../../image/bresenham.js';
export const createWall = (x0, z0, x1, z1, yBottom, yH) => {
    const pts = [];
    const line2 = bresenhamLine(x0, z0, x1, z1);
    for (let i = 0; i < line2.length; i++) {
        const [x, z] = line2[i];
        for (let y = yBottom; y < yBottom + yH; y++) {
            pts.push([x, y, z]);
        }
    }
    return pts;
};
export const createPlane = (x0, y0, z0, w, d) => {
    const pts = [];
    for (let z = z0; z < z0 + d; z++) {
        for (let x = x0; x < x0 + w; x++) {
            pts.push([x, y0, z]);
        }
    }
    return pts;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi92b3hlbC9nZW5lcmF0ZS9jcmVhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDBCQUEwQixDQUFBO0FBR3hELE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxDQUN4QixFQUFVLEVBQUUsRUFBVSxFQUFFLEVBQVUsRUFBRSxFQUFVLEVBQUUsT0FBZSxFQUFFLEVBQVUsRUFDM0UsRUFBRTtJQUNGLE1BQU0sR0FBRyxHQUFhLEVBQUUsQ0FBQTtJQUV4QixNQUFNLEtBQUssR0FBRyxhQUFhLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUE7SUFFM0MsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUN0QyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUV2QixLQUFLLElBQUksQ0FBQyxHQUFHLE9BQU8sRUFBRSxDQUFDLEdBQUcsT0FBTyxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBQzVDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFDckIsQ0FBQztJQUNILENBQUM7SUFFRCxPQUFPLEdBQUcsQ0FBQTtBQUNaLENBQUMsQ0FBQTtBQUVELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUN6QixFQUFVLEVBQUUsRUFBVSxFQUFFLEVBQVUsRUFDbEMsQ0FBUyxFQUFFLENBQVMsRUFDcEIsRUFBRTtJQUNGLE1BQU0sR0FBRyxHQUFhLEVBQUUsQ0FBQTtJQUV4QixLQUFLLElBQUksQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1FBQ2pDLEtBQUssSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7WUFDakMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUN0QixDQUFDO0lBQ0gsQ0FBQztJQUVELE9BQU8sR0FBRyxDQUFBO0FBQ1osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYnJlc2VuaGFtTGluZSB9IGZyb20gJy4uLy4uL2ltYWdlL2JyZXNlbmhhbS5qcydcclxuaW1wb3J0IHsgUG9pbnQzIH0gZnJvbSAnLi4vdHlwZXMuanMnXHJcblxyXG5leHBvcnQgY29uc3QgY3JlYXRlV2FsbCA9IChcclxuICB4MDogbnVtYmVyLCB6MDogbnVtYmVyLCB4MTogbnVtYmVyLCB6MTogbnVtYmVyLCB5Qm90dG9tOiBudW1iZXIsIHlIOiBudW1iZXJcclxuKSA9PiB7XHJcbiAgY29uc3QgcHRzOiBQb2ludDNbXSA9IFtdXHJcblxyXG4gIGNvbnN0IGxpbmUyID0gYnJlc2VuaGFtTGluZSh4MCwgejAsIHgxLCB6MSlcclxuXHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaW5lMi5sZW5ndGg7IGkrKykge1xyXG4gICAgY29uc3QgW3gsIHpdID0gbGluZTJbaV1cclxuXHJcbiAgICBmb3IgKGxldCB5ID0geUJvdHRvbTsgeSA8IHlCb3R0b20gKyB5SDsgeSsrKSB7XHJcbiAgICAgIHB0cy5wdXNoKFt4LCB5LCB6XSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBwdHNcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNyZWF0ZVBsYW5lID0gKFxyXG4gIHgwOiBudW1iZXIsIHkwOiBudW1iZXIsIHowOiBudW1iZXIsXHJcbiAgdzogbnVtYmVyLCBkOiBudW1iZXJcclxuKSA9PiB7XHJcbiAgY29uc3QgcHRzOiBQb2ludDNbXSA9IFtdXHJcblxyXG4gIGZvciAobGV0IHogPSB6MDsgeiA8IHowICsgZDsgeisrKSB7XHJcbiAgICBmb3IgKGxldCB4ID0geDA7IHggPCB4MCArIHc7IHgrKykge1xyXG4gICAgICBwdHMucHVzaChbeCwgeTAsIHpdKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHB0c1xyXG59Il19