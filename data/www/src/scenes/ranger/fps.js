import { layoutTextLine, textLayoutToIndices } from '../../lib/bmpfont/layout.js';
import { createColor } from '../../lib/image/color.js';
import { fill, fillIndices } from '../../lib/image/fill.js';
export const drawFps = (state, font, width, buffer, fontPts) => {
    const padding = 2;
    const frameTime = state.time.getFrameTime();
    const fps = Math.round(1000 / frameTime);
    const fpsText = `${fps} fps (${frameTime.toFixed(1)}ms)`;
    const fpsW = font.width * fpsText.length + padding * 2;
    const fpsH = font.height + padding * 2;
    const fpsX = width - fpsW - padding;
    const fpsY = padding;
    const fpsBg = createColor(0x00, 0x78, 0xd4);
    const fpsFg = createColor(0xff, 0xd7, 0x00);
    fill(buffer, fpsBg, [fpsX, fpsY, fpsW, fpsH]);
    const fpsLayout = layoutTextLine(font, fpsText);
    const fpsIndices = textLayoutToIndices(buffer, fpsX + padding, fpsY + padding, fontPts, fpsLayout);
    fillIndices(fpsIndices, buffer, fpsFg);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnBzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3NjZW5lcy9yYW5nZXIvZnBzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxjQUFjLEVBQUUsbUJBQW1CLEVBQ3BDLE1BQU0sNkJBQTZCLENBQUE7QUFHcEMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDBCQUEwQixDQUFBO0FBQ3RELE9BQU8sRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLE1BQU0seUJBQXlCLENBQUE7QUFHM0QsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLENBQ3JCLEtBQVksRUFBRSxJQUFjLEVBQUUsS0FBYSxFQUFFLE1BQWlCLEVBQzlELE9BQW1CLEVBQ25CLEVBQUU7SUFDRixNQUFNLE9BQU8sR0FBRyxDQUFDLENBQUE7SUFFakIsTUFBTSxTQUFTLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQTtJQUMzQyxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxTQUFTLENBQUMsQ0FBQTtJQUN4QyxNQUFNLE9BQU8sR0FBRyxHQUFHLEdBQUcsU0FBUyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUE7SUFFeEQsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsTUFBTSxHQUFHLE9BQU8sR0FBRyxDQUFDLENBQUE7SUFDdEQsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLEdBQUcsQ0FBQyxDQUFBO0lBQ3RDLE1BQU0sSUFBSSxHQUFHLEtBQUssR0FBRyxJQUFJLEdBQUcsT0FBTyxDQUFBO0lBQ25DLE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQTtJQUVwQixNQUFNLEtBQUssR0FBRyxXQUFXLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQTtJQUMzQyxNQUFNLEtBQUssR0FBRyxXQUFXLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQTtJQUUzQyxJQUFJLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUE7SUFFN0MsTUFBTSxTQUFTLEdBQUcsY0FBYyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQTtJQUUvQyxNQUFNLFVBQVUsR0FBRyxtQkFBbUIsQ0FDcEMsTUFBTSxFQUFFLElBQUksR0FBRyxPQUFPLEVBQUUsSUFBSSxHQUFHLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxDQUMzRCxDQUFBO0lBRUQsV0FBVyxDQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUE7QUFDeEMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBsYXlvdXRUZXh0TGluZSwgdGV4dExheW91dFRvSW5kaWNlc1xyXG59IGZyb20gJy4uLy4uL2xpYi9ibXBmb250L2xheW91dC5qcydcclxuXHJcbmltcG9ydCB7IEJtcEZvbnRNLCBGb250UG9pbnRzIH0gZnJvbSAnLi4vLi4vbGliL2JtcGZvbnQvdHlwZXMuanMnXHJcbmltcG9ydCB7IGNyZWF0ZUNvbG9yIH0gZnJvbSAnLi4vLi4vbGliL2ltYWdlL2NvbG9yLmpzJ1xyXG5pbXBvcnQgeyBmaWxsLCBmaWxsSW5kaWNlcyB9IGZyb20gJy4uLy4uL2xpYi9pbWFnZS9maWxsLmpzJ1xyXG5pbXBvcnQgeyBTdGF0ZSB9IGZyb20gJy4uLy4uL2xpYi90eXBlcy5qcydcclxuXHJcbmV4cG9ydCBjb25zdCBkcmF3RnBzID0gKFxyXG4gIHN0YXRlOiBTdGF0ZSwgZm9udDogQm1wRm9udE0sIHdpZHRoOiBudW1iZXIsIGJ1ZmZlcjogSW1hZ2VEYXRhLFxyXG4gIGZvbnRQdHM6IEZvbnRQb2ludHNcclxuKSA9PiB7XHJcbiAgY29uc3QgcGFkZGluZyA9IDJcclxuXHJcbiAgY29uc3QgZnJhbWVUaW1lID0gc3RhdGUudGltZS5nZXRGcmFtZVRpbWUoKVxyXG4gIGNvbnN0IGZwcyA9IE1hdGgucm91bmQoMTAwMCAvIGZyYW1lVGltZSlcclxuICBjb25zdCBmcHNUZXh0ID0gYCR7ZnBzfSBmcHMgKCR7ZnJhbWVUaW1lLnRvRml4ZWQoMSl9bXMpYFxyXG5cclxuICBjb25zdCBmcHNXID0gZm9udC53aWR0aCAqIGZwc1RleHQubGVuZ3RoICsgcGFkZGluZyAqIDJcclxuICBjb25zdCBmcHNIID0gZm9udC5oZWlnaHQgKyBwYWRkaW5nICogMlxyXG4gIGNvbnN0IGZwc1ggPSB3aWR0aCAtIGZwc1cgLSBwYWRkaW5nXHJcbiAgY29uc3QgZnBzWSA9IHBhZGRpbmdcclxuXHJcbiAgY29uc3QgZnBzQmcgPSBjcmVhdGVDb2xvcigweDAwLCAweDc4LCAweGQ0KVxyXG4gIGNvbnN0IGZwc0ZnID0gY3JlYXRlQ29sb3IoMHhmZiwgMHhkNywgMHgwMClcclxuXHJcbiAgZmlsbChidWZmZXIsIGZwc0JnLCBbZnBzWCwgZnBzWSwgZnBzVywgZnBzSF0pXHJcblxyXG4gIGNvbnN0IGZwc0xheW91dCA9IGxheW91dFRleHRMaW5lKGZvbnQsIGZwc1RleHQpXHJcblxyXG4gIGNvbnN0IGZwc0luZGljZXMgPSB0ZXh0TGF5b3V0VG9JbmRpY2VzKFxyXG4gICAgYnVmZmVyLCBmcHNYICsgcGFkZGluZywgZnBzWSArIHBhZGRpbmcsIGZvbnRQdHMsIGZwc0xheW91dFxyXG4gIClcclxuXHJcbiAgZmlsbEluZGljZXMoZnBzSW5kaWNlcywgYnVmZmVyLCBmcHNGZylcclxufVxyXG4iXX0=