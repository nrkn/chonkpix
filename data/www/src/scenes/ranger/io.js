export const rangerIo = (state, deps, fs) => {
    const keys = state.getKeys();
    if (keys['Escape']) {
        state.setRunning(false);
        // consume the key
        keys['Escape'] = false;
        return;
    }
    const wheel = state.mouse.takeWheel();
    const zoom = state.view.getZoom();
    if (wheel < 0) {
        state.view.setZoom(zoom + 1);
        fs.prevRectIndices.clear();
    }
    else if (wheel > 0) {
        state.view.setZoom(zoom - 1);
        fs.prevRectIndices.clear();
    }
    const presses = state.getKeyPresses();
    fs.moveCols = 0;
    fs.moveRows = 0;
    for (const key of presses) {
        let ocx = fs.cameraX;
        let ocy = fs.cameraY;
        if (key.toLowerCase() === 'w' && fs.cameraY > 0) {
            fs.cameraY--;
            fs.moveRows--;
        }
        if (key.toLowerCase() === 's' && fs.cameraY < deps.tileMap.height - 1) {
            fs.cameraY++;
            fs.moveRows++;
        }
        if (key.toLowerCase() === 'a' && fs.cameraX > 0) {
            fs.cameraX--;
            fs.facing = 'left';
            fs.moveCols--;
        }
        if (key.toLowerCase() === 'd' && fs.cameraX < deps.tileMap.width - 1) {
            fs.cameraX++;
            fs.facing = 'right';
            fs.moveCols++;
        }
        // check blocking
        const cameraTile = deps.tileMap.data[fs.cameraY * deps.tileMap.width + fs.cameraX];
        if (deps.blocking.has(cameraTile)) {
            fs.cameraX = ocx;
            fs.cameraY = ocy;
            fs.moveCols = 0;
            fs.moveRows = 0;
        }
    }
    // consume all key presses
    presses.length = 0;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvc2NlbmVzL3Jhbmdlci9pby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxLQUFZLEVBQUUsSUFBZ0IsRUFBRSxFQUFlLEVBQUUsRUFBRTtJQUMxRSxNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUE7SUFFNUIsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQztRQUNuQixLQUFLLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBRXZCLGtCQUFrQjtRQUNsQixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsS0FBSyxDQUFBO1FBRXRCLE9BQU07SUFDUixDQUFDO0lBRUQsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsQ0FBQTtJQUNyQyxNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFBO0lBRWpDLElBQUksS0FBSyxHQUFHLENBQUMsRUFBRSxDQUFDO1FBQ2QsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFBO1FBQzVCLEVBQUUsQ0FBQyxlQUFlLENBQUMsS0FBSyxFQUFFLENBQUE7SUFDNUIsQ0FBQztTQUFNLElBQUksS0FBSyxHQUFHLENBQUMsRUFBRSxDQUFDO1FBQ3JCLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQTtRQUM1QixFQUFFLENBQUMsZUFBZSxDQUFDLEtBQUssRUFBRSxDQUFBO0lBQzVCLENBQUM7SUFFRCxNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsYUFBYSxFQUFFLENBQUE7SUFFckMsRUFBRSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUE7SUFDZixFQUFFLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQTtJQUVmLEtBQUssTUFBTSxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7UUFDMUIsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQTtRQUNwQixJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFBO1FBRXBCLElBQUksR0FBRyxDQUFDLFdBQVcsRUFBRSxLQUFLLEdBQUcsSUFBSSxFQUFFLENBQUMsT0FBTyxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQ2hELEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtZQUNaLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQTtRQUNmLENBQUM7UUFDRCxJQUFJLEdBQUcsQ0FBQyxXQUFXLEVBQUUsS0FBSyxHQUFHLElBQUksRUFBRSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQztZQUN0RSxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUE7WUFDWixFQUFFLENBQUMsUUFBUSxFQUFFLENBQUE7UUFDZixDQUFDO1FBRUQsSUFBSSxHQUFHLENBQUMsV0FBVyxFQUFFLEtBQUssR0FBRyxJQUFJLEVBQUUsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDaEQsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFBO1lBQ1osRUFBRSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUE7WUFDbEIsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFBO1FBQ2YsQ0FBQztRQUNELElBQUksR0FBRyxDQUFDLFdBQVcsRUFBRSxLQUFLLEdBQUcsSUFBSSxFQUFFLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQ3JFLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtZQUNaLEVBQUUsQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFBO1lBQ25CLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQTtRQUNmLENBQUM7UUFFRCxpQkFBaUI7UUFDakIsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQ2xDLEVBQUUsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FDN0MsQ0FBQTtRQUVELElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQztZQUNsQyxFQUFFLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQTtZQUNoQixFQUFFLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQTtZQUNoQixFQUFFLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQTtZQUNmLEVBQUUsQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFBO1FBQ2pCLENBQUM7SUFDSCxDQUFDO0lBRUQsMEJBQTBCO0lBQzFCLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFBO0FBQ3BCLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0YXRlIH0gZnJvbSAnLi4vLi4vbGliL3R5cGVzLmpzJ1xyXG5pbXBvcnQgeyBSYW5nZXJEZXBzLCBSYW5nZXJTdGF0ZSB9IGZyb20gJy4vdHlwZXMuanMnXHJcblxyXG5leHBvcnQgY29uc3QgcmFuZ2VySW8gPSAoc3RhdGU6IFN0YXRlLCBkZXBzOiBSYW5nZXJEZXBzLCBmczogUmFuZ2VyU3RhdGUpID0+IHtcclxuICBjb25zdCBrZXlzID0gc3RhdGUuZ2V0S2V5cygpXHJcblxyXG4gIGlmIChrZXlzWydFc2NhcGUnXSkge1xyXG4gICAgc3RhdGUuc2V0UnVubmluZyhmYWxzZSlcclxuXHJcbiAgICAvLyBjb25zdW1lIHRoZSBrZXlcclxuICAgIGtleXNbJ0VzY2FwZSddID0gZmFsc2VcclxuXHJcbiAgICByZXR1cm5cclxuICB9XHJcblxyXG4gIGNvbnN0IHdoZWVsID0gc3RhdGUubW91c2UudGFrZVdoZWVsKClcclxuICBjb25zdCB6b29tID0gc3RhdGUudmlldy5nZXRab29tKClcclxuXHJcbiAgaWYgKHdoZWVsIDwgMCkge1xyXG4gICAgc3RhdGUudmlldy5zZXRab29tKHpvb20gKyAxKVxyXG4gICAgZnMucHJldlJlY3RJbmRpY2VzLmNsZWFyKClcclxuICB9IGVsc2UgaWYgKHdoZWVsID4gMCkge1xyXG4gICAgc3RhdGUudmlldy5zZXRab29tKHpvb20gLSAxKVxyXG4gICAgZnMucHJldlJlY3RJbmRpY2VzLmNsZWFyKClcclxuICB9XHJcblxyXG4gIGNvbnN0IHByZXNzZXMgPSBzdGF0ZS5nZXRLZXlQcmVzc2VzKClcclxuXHJcbiAgZnMubW92ZUNvbHMgPSAwXHJcbiAgZnMubW92ZVJvd3MgPSAwXHJcblxyXG4gIGZvciAoY29uc3Qga2V5IG9mIHByZXNzZXMpIHtcclxuICAgIGxldCBvY3ggPSBmcy5jYW1lcmFYXHJcbiAgICBsZXQgb2N5ID0gZnMuY2FtZXJhWVxyXG5cclxuICAgIGlmIChrZXkudG9Mb3dlckNhc2UoKSA9PT0gJ3cnICYmIGZzLmNhbWVyYVkgPiAwKSB7XHJcbiAgICAgIGZzLmNhbWVyYVktLVxyXG4gICAgICBmcy5tb3ZlUm93cy0tXHJcbiAgICB9XHJcbiAgICBpZiAoa2V5LnRvTG93ZXJDYXNlKCkgPT09ICdzJyAmJiBmcy5jYW1lcmFZIDwgZGVwcy50aWxlTWFwLmhlaWdodCAtIDEpIHtcclxuICAgICAgZnMuY2FtZXJhWSsrXHJcbiAgICAgIGZzLm1vdmVSb3dzKytcclxuICAgIH1cclxuXHJcbiAgICBpZiAoa2V5LnRvTG93ZXJDYXNlKCkgPT09ICdhJyAmJiBmcy5jYW1lcmFYID4gMCkge1xyXG4gICAgICBmcy5jYW1lcmFYLS1cclxuICAgICAgZnMuZmFjaW5nID0gJ2xlZnQnXHJcbiAgICAgIGZzLm1vdmVDb2xzLS1cclxuICAgIH1cclxuICAgIGlmIChrZXkudG9Mb3dlckNhc2UoKSA9PT0gJ2QnICYmIGZzLmNhbWVyYVggPCBkZXBzLnRpbGVNYXAud2lkdGggLSAxKSB7XHJcbiAgICAgIGZzLmNhbWVyYVgrK1xyXG4gICAgICBmcy5mYWNpbmcgPSAncmlnaHQnXHJcbiAgICAgIGZzLm1vdmVDb2xzKytcclxuICAgIH1cclxuXHJcbiAgICAvLyBjaGVjayBibG9ja2luZ1xyXG4gICAgY29uc3QgY2FtZXJhVGlsZSA9IGRlcHMudGlsZU1hcC5kYXRhW1xyXG4gICAgICBmcy5jYW1lcmFZICogZGVwcy50aWxlTWFwLndpZHRoICsgZnMuY2FtZXJhWFxyXG4gICAgXVxyXG5cclxuICAgIGlmIChkZXBzLmJsb2NraW5nLmhhcyhjYW1lcmFUaWxlKSkge1xyXG4gICAgICBmcy5jYW1lcmFYID0gb2N4XHJcbiAgICAgIGZzLmNhbWVyYVkgPSBvY3lcclxuICAgICAgZnMubW92ZUNvbHMgPSAwXHJcbiAgICAgIGZzLm1vdmVSb3dzID0gMFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gY29uc3VtZSBhbGwga2V5IHByZXNzZXNcclxuICBwcmVzc2VzLmxlbmd0aCA9IDBcclxufSJdfQ==