export const rangerIo = (state, deps, fs) => {
    const keys = state.getKeys();
    if (keys['Escape']) {
        state.setRunning(false);
        // consume the key
        keys['Escape'] = false;
        return;
    }
    const wheel = state.mouse.takeWheel();
    const zoom = state.view.getZoom();
    if (wheel < 0) {
        state.view.setZoom(zoom + 1);
        fs.lastW = 0;
        fs.lastH = 0;
    }
    else if (wheel > 0) {
        state.view.setZoom(zoom - 1);
        fs.lastW = 0;
        fs.lastH = 0;
    }
    const presses = state.getKeyPresses();
    for (const key of presses) {
        let ocx = fs.cameraX;
        let ocy = fs.cameraY;
        if (key.toLowerCase() === 'w' && fs.cameraY > 0) {
            fs.cameraY--;
        }
        if (key.toLowerCase() === 's' && fs.cameraY < deps.tileMap.height - 1) {
            fs.cameraY++;
        }
        if (key.toLowerCase() === 'a' && fs.cameraX > 0) {
            fs.cameraX--;
            fs.facing = 'left';
        }
        if (key.toLowerCase() === 'd' && fs.cameraX < deps.tileMap.width - 1) {
            fs.cameraX++;
            fs.facing = 'right';
        }
        // check blocking
        const cameraTile = deps.tileMap.data[fs.cameraY * deps.tileMap.width + fs.cameraX];
        if (deps.blocking.has(cameraTile)) {
            fs.cameraX = ocx;
            fs.cameraY = ocy;
        }
    }
    // consume all key presses
    presses.length = 0;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvc2NlbmVzL3Jhbmdlci9pby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxLQUFZLEVBQUUsSUFBZ0IsRUFBRSxFQUFlLEVBQUUsRUFBRTtJQUMxRSxNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUE7SUFFNUIsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQztRQUNuQixLQUFLLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBRXZCLGtCQUFrQjtRQUNsQixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsS0FBSyxDQUFBO1FBRXRCLE9BQU07SUFDUixDQUFDO0lBRUQsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsQ0FBQTtJQUNyQyxNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFBO0lBRWpDLElBQUksS0FBSyxHQUFHLENBQUMsRUFBRSxDQUFDO1FBQ2QsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFBO1FBQzVCLEVBQUUsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFBO1FBQ1osRUFBRSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUE7SUFDZCxDQUFDO1NBQU0sSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLENBQUM7UUFDckIsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFBO1FBQzVCLEVBQUUsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFBO1FBQ1osRUFBRSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUE7SUFDZCxDQUFDO0lBRUQsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLGFBQWEsRUFBRSxDQUFBO0lBRXJDLEtBQUssTUFBTSxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7UUFDMUIsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQTtRQUNwQixJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFBO1FBRXBCLElBQUksR0FBRyxDQUFDLFdBQVcsRUFBRSxLQUFLLEdBQUcsSUFBSSxFQUFFLENBQUMsT0FBTyxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQ2hELEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtRQUNkLENBQUM7UUFDRCxJQUFJLEdBQUcsQ0FBQyxXQUFXLEVBQUUsS0FBSyxHQUFHLElBQUksRUFBRSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQztZQUN0RSxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUE7UUFDZCxDQUFDO1FBRUQsSUFBSSxHQUFHLENBQUMsV0FBVyxFQUFFLEtBQUssR0FBRyxJQUFJLEVBQUUsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDaEQsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFBO1lBQ1osRUFBRSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUE7UUFDcEIsQ0FBQztRQUNELElBQUksR0FBRyxDQUFDLFdBQVcsRUFBRSxLQUFLLEdBQUcsSUFBSSxFQUFFLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQ3JFLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtZQUNaLEVBQUUsQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFBO1FBQ3JCLENBQUM7UUFFRCxpQkFBaUI7UUFDakIsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQ2xDLEVBQUUsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FDN0MsQ0FBQTtRQUVELElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQztZQUNsQyxFQUFFLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQTtZQUNoQixFQUFFLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQTtRQUNsQixDQUFDO0lBQ0gsQ0FBQztJQUVELDBCQUEwQjtJQUMxQixPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQTtBQUNwQixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGF0ZSB9IGZyb20gJy4uLy4uL2xpYi90eXBlcy5qcydcclxuaW1wb3J0IHsgUmFuZ2VyRGVwcywgUmFuZ2VyU3RhdGUgfSBmcm9tICcuL3R5cGVzLmpzJ1xyXG5cclxuZXhwb3J0IGNvbnN0IHJhbmdlcklvID0gKHN0YXRlOiBTdGF0ZSwgZGVwczogUmFuZ2VyRGVwcywgZnM6IFJhbmdlclN0YXRlKSA9PiB7XHJcbiAgY29uc3Qga2V5cyA9IHN0YXRlLmdldEtleXMoKVxyXG5cclxuICBpZiAoa2V5c1snRXNjYXBlJ10pIHtcclxuICAgIHN0YXRlLnNldFJ1bm5pbmcoZmFsc2UpXHJcblxyXG4gICAgLy8gY29uc3VtZSB0aGUga2V5XHJcbiAgICBrZXlzWydFc2NhcGUnXSA9IGZhbHNlXHJcblxyXG4gICAgcmV0dXJuXHJcbiAgfVxyXG5cclxuICBjb25zdCB3aGVlbCA9IHN0YXRlLm1vdXNlLnRha2VXaGVlbCgpXHJcbiAgY29uc3Qgem9vbSA9IHN0YXRlLnZpZXcuZ2V0Wm9vbSgpXHJcblxyXG4gIGlmICh3aGVlbCA8IDApIHtcclxuICAgIHN0YXRlLnZpZXcuc2V0Wm9vbSh6b29tICsgMSlcclxuICAgIGZzLmxhc3RXID0gMFxyXG4gICAgZnMubGFzdEggPSAwXHJcbiAgfSBlbHNlIGlmICh3aGVlbCA+IDApIHtcclxuICAgIHN0YXRlLnZpZXcuc2V0Wm9vbSh6b29tIC0gMSlcclxuICAgIGZzLmxhc3RXID0gMFxyXG4gICAgZnMubGFzdEggPSAwXHJcbiAgfVxyXG5cclxuICBjb25zdCBwcmVzc2VzID0gc3RhdGUuZ2V0S2V5UHJlc3NlcygpXHJcblxyXG4gIGZvciAoY29uc3Qga2V5IG9mIHByZXNzZXMpIHtcclxuICAgIGxldCBvY3ggPSBmcy5jYW1lcmFYXHJcbiAgICBsZXQgb2N5ID0gZnMuY2FtZXJhWVxyXG5cclxuICAgIGlmIChrZXkudG9Mb3dlckNhc2UoKSA9PT0gJ3cnICYmIGZzLmNhbWVyYVkgPiAwKSB7XHJcbiAgICAgIGZzLmNhbWVyYVktLVxyXG4gICAgfVxyXG4gICAgaWYgKGtleS50b0xvd2VyQ2FzZSgpID09PSAncycgJiYgZnMuY2FtZXJhWSA8IGRlcHMudGlsZU1hcC5oZWlnaHQgLSAxKSB7XHJcbiAgICAgIGZzLmNhbWVyYVkrK1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChrZXkudG9Mb3dlckNhc2UoKSA9PT0gJ2EnICYmIGZzLmNhbWVyYVggPiAwKSB7XHJcbiAgICAgIGZzLmNhbWVyYVgtLVxyXG4gICAgICBmcy5mYWNpbmcgPSAnbGVmdCdcclxuICAgIH1cclxuICAgIGlmIChrZXkudG9Mb3dlckNhc2UoKSA9PT0gJ2QnICYmIGZzLmNhbWVyYVggPCBkZXBzLnRpbGVNYXAud2lkdGggLSAxKSB7XHJcbiAgICAgIGZzLmNhbWVyYVgrK1xyXG4gICAgICBmcy5mYWNpbmcgPSAncmlnaHQnXHJcbiAgICB9XHJcblxyXG4gICAgLy8gY2hlY2sgYmxvY2tpbmdcclxuICAgIGNvbnN0IGNhbWVyYVRpbGUgPSBkZXBzLnRpbGVNYXAuZGF0YVtcclxuICAgICAgZnMuY2FtZXJhWSAqIGRlcHMudGlsZU1hcC53aWR0aCArIGZzLmNhbWVyYVhcclxuICAgIF1cclxuXHJcbiAgICBpZiAoZGVwcy5ibG9ja2luZy5oYXMoY2FtZXJhVGlsZSkpIHtcclxuICAgICAgZnMuY2FtZXJhWCA9IG9jeFxyXG4gICAgICBmcy5jYW1lcmFZID0gb2N5XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBjb25zdW1lIGFsbCBrZXkgcHJlc3Nlc1xyXG4gIHByZXNzZXMubGVuZ3RoID0gMFxyXG59Il19