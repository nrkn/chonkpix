import { layoutTextLine, textLayoutToIndices } from '../../../lib/bmpfont/layout.js';
import { createColor } from '../../../lib/image/color.js';
import { fill, fillIndices } from '../../../lib/image/fill.js';
export const drawFps = (state, font, width, buffer, fontPts) => {
    const padding = 2;
    const frameTime = state.time.getFrameTime();
    const fps = Math.round(1000 / frameTime);
    const fpsText = `${fps} fps (${frameTime.toFixed(1)}ms)`;
    const fpsW = font.width * fpsText.length + padding * 2;
    const fpsH = font.height + padding * 2;
    const fpsX = width - fpsW - padding;
    const fpsY = padding;
    const fpsBg = createColor(0x00, 0x78, 0xd4);
    const fpsFg = createColor(0xff, 0xd7, 0x00);
    fill(buffer, fpsBg, [fpsX, fpsY, fpsW, fpsH]);
    const fpsLayout = layoutTextLine(font, fpsText);
    const fpsIndices = textLayoutToIndices(buffer, fpsX + padding, fpsY + padding, fontPts, fpsLayout);
    fillIndices(fpsIndices, buffer, fpsFg);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnBzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3NjZW5lcy9zYW5kYm94L3Jhbmdlci9mcHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLGNBQWMsRUFBRSxtQkFBbUIsRUFDcEMsTUFBTSxnQ0FBZ0MsQ0FBQTtBQUd2QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNkJBQTZCLENBQUE7QUFDekQsT0FBTyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQTtBQUc5RCxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsQ0FDckIsS0FBWSxFQUFFLElBQWMsRUFBRSxLQUFhLEVBQUUsTUFBaUIsRUFDOUQsT0FBbUIsRUFDbkIsRUFBRTtJQUNGLE1BQU0sT0FBTyxHQUFHLENBQUMsQ0FBQTtJQUVqQixNQUFNLFNBQVMsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFBO0lBQzNDLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQyxDQUFBO0lBQ3hDLE1BQU0sT0FBTyxHQUFHLEdBQUcsR0FBRyxTQUFTLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQTtJQUV4RCxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEdBQUcsT0FBTyxHQUFHLENBQUMsQ0FBQTtJQUN0RCxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLE9BQU8sR0FBRyxDQUFDLENBQUE7SUFDdEMsTUFBTSxJQUFJLEdBQUcsS0FBSyxHQUFHLElBQUksR0FBRyxPQUFPLENBQUE7SUFDbkMsTUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFBO0lBRXBCLE1BQU0sS0FBSyxHQUFHLFdBQVcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFBO0lBQzNDLE1BQU0sS0FBSyxHQUFHLFdBQVcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFBO0lBRTNDLElBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQTtJQUU3QyxNQUFNLFNBQVMsR0FBRyxjQUFjLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFBO0lBRS9DLE1BQU0sVUFBVSxHQUFHLG1CQUFtQixDQUNwQyxNQUFNLEVBQUUsSUFBSSxHQUFHLE9BQU8sRUFBRSxJQUFJLEdBQUcsT0FBTyxFQUFFLE9BQU8sRUFBRSxTQUFTLENBQzNELENBQUE7SUFFRCxXQUFXLENBQUMsVUFBVSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQTtBQUN4QyxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBsYXlvdXRUZXh0TGluZSwgdGV4dExheW91dFRvSW5kaWNlc1xufSBmcm9tICcuLi8uLi8uLi9saWIvYm1wZm9udC9sYXlvdXQuanMnXG5cbmltcG9ydCB7IEJtcEZvbnRNLCBGb250UG9pbnRzIH0gZnJvbSAnLi4vLi4vLi4vbGliL2JtcGZvbnQvdHlwZXMuanMnXG5pbXBvcnQgeyBjcmVhdGVDb2xvciB9IGZyb20gJy4uLy4uLy4uL2xpYi9pbWFnZS9jb2xvci5qcydcbmltcG9ydCB7IGZpbGwsIGZpbGxJbmRpY2VzIH0gZnJvbSAnLi4vLi4vLi4vbGliL2ltYWdlL2ZpbGwuanMnXG5pbXBvcnQgeyBTdGF0ZSB9IGZyb20gJy4uLy4uLy4uL2xpYi90eXBlcy5qcydcblxuZXhwb3J0IGNvbnN0IGRyYXdGcHMgPSAoXG4gIHN0YXRlOiBTdGF0ZSwgZm9udDogQm1wRm9udE0sIHdpZHRoOiBudW1iZXIsIGJ1ZmZlcjogSW1hZ2VEYXRhLFxuICBmb250UHRzOiBGb250UG9pbnRzXG4pID0+IHtcbiAgY29uc3QgcGFkZGluZyA9IDJcblxuICBjb25zdCBmcmFtZVRpbWUgPSBzdGF0ZS50aW1lLmdldEZyYW1lVGltZSgpXG4gIGNvbnN0IGZwcyA9IE1hdGgucm91bmQoMTAwMCAvIGZyYW1lVGltZSlcbiAgY29uc3QgZnBzVGV4dCA9IGAke2Zwc30gZnBzICgke2ZyYW1lVGltZS50b0ZpeGVkKDEpfW1zKWBcblxuICBjb25zdCBmcHNXID0gZm9udC53aWR0aCAqIGZwc1RleHQubGVuZ3RoICsgcGFkZGluZyAqIDJcbiAgY29uc3QgZnBzSCA9IGZvbnQuaGVpZ2h0ICsgcGFkZGluZyAqIDJcbiAgY29uc3QgZnBzWCA9IHdpZHRoIC0gZnBzVyAtIHBhZGRpbmdcbiAgY29uc3QgZnBzWSA9IHBhZGRpbmdcblxuICBjb25zdCBmcHNCZyA9IGNyZWF0ZUNvbG9yKDB4MDAsIDB4NzgsIDB4ZDQpXG4gIGNvbnN0IGZwc0ZnID0gY3JlYXRlQ29sb3IoMHhmZiwgMHhkNywgMHgwMClcblxuICBmaWxsKGJ1ZmZlciwgZnBzQmcsIFtmcHNYLCBmcHNZLCBmcHNXLCBmcHNIXSlcblxuICBjb25zdCBmcHNMYXlvdXQgPSBsYXlvdXRUZXh0TGluZShmb250LCBmcHNUZXh0KVxuXG4gIGNvbnN0IGZwc0luZGljZXMgPSB0ZXh0TGF5b3V0VG9JbmRpY2VzKFxuICAgIGJ1ZmZlciwgZnBzWCArIHBhZGRpbmcsIGZwc1kgKyBwYWRkaW5nLCBmb250UHRzLCBmcHNMYXlvdXRcbiAgKVxuXG4gIGZpbGxJbmRpY2VzKGZwc0luZGljZXMsIGJ1ZmZlciwgZnBzRmcpXG59XG4iXX0=